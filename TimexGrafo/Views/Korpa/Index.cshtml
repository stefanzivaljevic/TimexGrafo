@model TimexGrafo.ViewModels.CartViewModel
@inject IHttpContextAccessor httpContext
@{
    ViewData["Title"] = " - Korpa";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var counter = 0;
}

<a href="/Shop" class="btn btn-info float-right btn-sm"><i class="fas fa-chevron-left"></i> Nazad na listu</a>
<h2 class="font-weight-lighter"> Korpa </h2>
<hr class="bg-info float-left" style="width:5%; height:5px;" />

<form asp-controller="Checkout" asp-action="Index" method="post">
    <div class="row mt-5">
        <div class="col-md-10 offset-md-1">
            @if (Model == null || Model.Cart.CartItem.Count() <= 0)
            {
                <table class="table">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col" class="d-none d-md-table-cell d-xl-table-cell d-lg-table-cell d-sm-table-cell">#</th>
                            <th scope="col">Proizvod</th>
                            <th scope="col">Šifra artikla</th>
                            <th scope="col" class="d-none d-md-table-cell d-xl-table-cell d-lg-table-cell d-sm-table-cell">Cena</th>
                            <th scope="col">Količina</th>
                            <th scope="col">Iznos</th>
                            <th scope="col"> </th>
                        </tr>
                    </thead>
                </table>
                <br />
                <h5 class="h5 mb-5 font-weight-lighter ml-2"> Vaša korpa je prazna. </h5>
                <br />
                <br />
            }
            else
            {
                if (Model.Cart.CartItem.Count() > 0)
                {
                    <h5 class="h5 mb-0 "> @Model.Cart.CartItem.Count().ToString() artikla </h5>
                }
                <table class="table table-responsive">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col" class="d-none d-md-table-cell d-xl-table-cell d-lg-table-cell d-sm-table-cell">#</th>
                            <th scope="col">Proizvod</th>
                            <th scope="col">Šifra artikla</th>
                            <th scope="col" class="d-none d-md-table-cell d-xl-table-cell d-lg-table-cell d-sm-table-cell">Cena</th>
                            <th scope="col">Količina</th>
                            <th scope="col">Iznos</th>
                            <th scope="col"> </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var c in Model.Cart.CartItem)
                            {
                                <small class="d-none">@(counter++)</small>
                                <tr class="border border-top-0 border-left-0 border-right-0" id="tableRowUpdate">
                                    <th scope="row" class="d-none d-md-table-cell">@(counter)</th>
                                    <td class="col"><a href="/Shop/@c.Item.Id" class="text-decoration-none"><img src="~/lib/images/Shop/@(c.Item.Image).jpg" class="img-fluid d-inline-block w-15" alt="@c.Item.Title" /> <h5 class="d-inline font-weight-normal">@c.Item.Title</h5></a></td>
                                    <td class="col">@c.Item.ItemCode</td>
                                    <td class="col d-none d-md-table-cell d-xl-table-cell d-lg-table-cell d-sm-table-cell" id="itemPrice_@c.Id" data-price="@c.Item.FullPrice"> @(String.Format("{0:0.00}", c.Item.FullPrice)) RSD </td>
                                    <td class="col text-center">
                                        <input asp-for="@c.Quantity" type="number" value="@c.Quantity" id="itemQuantity_@c.Id" required class="w-100 d-inline" onchange="UpdateCartItem(this)" data-id="@c.Id" data-beforeChange="@c.Quantity" min="1" />
                                    </td>
                                    <td class="col" id="fullItemPrice_@c.Id" data-price="@(c.Item.FullPrice*c.Quantity)">@(String.Format("{0:0.00}", c.Item.FullPrice * c.Quantity)) RSD</td>
                                    <td class="col"><a id="btnRemoveFromCart" onclick="RemoveFromCart(this)" data-id="@c.Id" class="text-danger pointer-event" style="cursor:pointer"><i class="far fa-times-circle align-bottom"></i></a></td>
                                </tr>
                                 
                            }
                        }
                    </tbody>
                </table>
                if (Model.Cart.CartItem.Count <= 0)
                {
                    <br />
                    <h5 class="h5 mb-5 font-weight-lighter ml-2"> Vaša korpa je prazna. </h5>
                    <br />
                    <br />
                }
            }
        </div>
    </div>
    @if (Model != null)
    {
        if (Model.Cart.CartItem.Count() > 0)
        {
            <div class="row">
                <div class="col-md-12">
                    @*<h5 class="pl-4 small">Pregled kupovine</h5>*@
                </div>
                <div class="col-md-4 offset-md-2">
                    <h5 class="small">Pregled kupovine</h5>
                    <hr class="bg-info ml-0 mt-0" style="width:15%; height:4px;" />
                    <p>Ukupno: </p>
                </div>
                <div class="col-md-4 text-right">
                    <br />
                    <br />
                    @if (Model == null)
                    {
                        <p> 0 RSD</p>
                    }
                    else
                    {
                        <div class="totalPriceUpdate">
                            @{
                                double totalPrice=0;
                                foreach (var i in Model.Cart.CartItem)
                                {
                                    totalPrice += i.Quantity * i.Item.FullPrice;
                                }
                             }
                            <p id="totalPrice" data-totalPrice="@totalPrice">@(String.Format("{0:0.00}", totalPrice)) RSD</p>
                        </div>                        
                                }
                </div>
                <div class="col-md-8 offset-md-2">
                    <small class="text-right"><i class="fas fa-info-circle"></i> U cenu je uračunat PDV</small>
                </div>
                <div class="col-md-8 offset-md-2 text-right">
                    <hr />
                    <input type="submit" value="Nastavi na plaćanje" class="btn btn-outline-dark btn-sm" onclick="submitCart()"/>
                </div>
            </div>
        }

    }
    
</form>


@section Scripts{ 
    <script type="text/javascript">

        var elements = document.querySelectorAll('.itemQuantity');
        var values = [].map.call(elements, function (e) {
            return e.value;
        });

        function RemoveFromCart(item) {
            var cartItemId = $(item).attr("data-id");
            var selectQuantity = document.querySelector('#itemQuantity_' + cartItemId);
            var quantity = selectQuantity.value;



            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                type: 'DELETE',
                url: '/Korpa',
                data: {
                    __RequestVerificationToken: token,
                    "cartItemId": cartItemId,
                    "quantity": quantity
                },
                success: function (data) {

                    location.reload();
                },
                error: function (request, status, error) {
                    location.reload();

                }

            });
        }

        function UpdateCartItem(item) {

            var cartItemId = $(item).attr("data-id");
            var selectQuantity = document.querySelector('#itemQuantity_' + cartItemId);
            var quantity = selectQuantity.value;
            var beforeChange = $(item).attr("data-beforeChange");

            if (quantity >= 1) {
                if (quantity <= 9999) {

                    var totalPrice = parseFloat($("#totalPrice").attr("data-totalPrice"));
                    var itemPrice = parseFloat($('#itemPrice_' + cartItemId).attr("data-price"));
                    var fullItemPrice = parseFloat($('#fullItemPrice_' + cartItemId).attr("data-price"));

                    $(item).attr("data-beforeChange", quantity);

                    var oldFullItemPrice = fullItemPrice;
                    fullItemPrice = quantity * itemPrice;

                    totalPrice -= oldFullItemPrice;
                    totalPrice += fullItemPrice;                    

                    totalPrice = totalPrice.toFixed(2);
                    fullItemPrice = fullItemPrice.toFixed(2);

                    $('.totalPriceUpdate').html("<p id='totalPrice' data-totalPrice='" + totalPrice + "'>" + totalPrice + " RSD </p>");

                    $('#fullItemPrice_' + cartItemId).replaceWith('<td class="col" id="fullItemPrice_' + cartItemId + '" data-price="' + fullItemPrice + '">' + fullItemPrice + ' RSD</td>');

                    $('#quantity_' + cartItemId).val(quantity);

                    document.cookie = "cartItem_" + cartItemId + "=" + quantity + "; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";

                    var d = new Date();
                    d.setTime(d.getTime() + 7 * 24 * 60 * 60 * 1000); 
                    document.cookie = "cartItem_" + cartItemId + "=" + quantity + "; expires=" + d + "; path=/";

                }
                else {
                    $('#itemQuantity_' + cartItemId).val(beforeChange);
                }
            }
            else {
                $('#itemQuantity_' + cartItemId).val(beforeChange);
            }

            //var token = $('input[name="__RequestVerificationToken"]').val();
            //$.ajax({
            //    async: false,
            //    type: 'PUT',
            //    url: '/Korpa',
            //    data: {
            //        __RequestVerificationToken: token,
            //        "cartItemId": cartItemId,
            //        "quantity": quantity,
            //        "quantityBeforeChange": values[counter]
            //    },
            //    success: function (data) {

            //        console.log("Successfully updated. " + typeof (data.message));
            //        values[counter] = quantity;
            //        UpdateCartItemView();
            //    },
            //    error: function (request, status, error) {
            //        console.log("Successfully updated. ");
            //        values[counter] = quantity;
            //        UpdateCartItemView();
            //    }

            //});
        }

        function UpdateCartItemView() {

            $.ajax({
                async: false,
                type: 'GET',
                url: '/Korpa/DohvatiCenu',
                success: function (data) {
                    $('.totalPriceUpdate').html(data.message);

                },
                error: function (request, status, error) {
                    $('.totalPriceUpdate').html(request);
                }

            });

        }

        function submitCart() {
            
        }

    </script>
}